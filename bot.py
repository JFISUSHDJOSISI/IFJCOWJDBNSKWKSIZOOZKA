import os
import time
import telebot
import requests
import random
from urllib.parse import urlparse
from requests.adapters import HTTPAdapter
from requests.packages.urllib3.util.retry import Retry
from telebot import types

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
BOT_TOKEN = '7147982361:AAFRdFskA7pN7c5okQnfElGDnDCgQDBeH80'

bot = telebot.TeleBot(BOT_TOKEN)

def create_session_with_retries():
    session = requests.Session()
    retries = Retry(total=5, backoff_factor=0.1, status_forcelist=[500, 502, 503, 504])
    session.mount('http://', HTTPAdapter(max_retries=retries))
    session.mount('https://', HTTPAdapter(max_retries=retries))
    return session

def get_random_emoji():
    # –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏ –¥–ª—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
    emojis = ['üî•', '‚ö°', '‚òÄÔ∏è', 'üí•', 'üå†', '‚ú®', 'üéä', 'üéâ', 'üöÄ', 'üåü']
    return random.choice(emojis)

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª, –∏ —è —Å–∫–∞—á–∞—é –µ–≥–æ –¥–ª—è —Ç–µ–±—è.")

@bot.message_handler(func=lambda message: True)
def download_file(message):
    url = message.text.strip()

    if not url.startswith(('http://', 'https://')):
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É, –Ω–∞—á–∏–Ω–∞—é—â—É—é—Å—è —Å http:// –∏–ª–∏ https://")
        return

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        status_message = bot.reply_to(message, "–ù–∞—á–∏–Ω–∞—é —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞...")

        # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
        session = create_session_with_retries()

        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
        response = session.get(url, stream=True)
        response.raise_for_status()

        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Content-Disposition, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        content_disposition = response.headers.get('Content-Disposition')
        if content_disposition:
            filename = content_disposition.split('filename=')[-1].strip('"')
        else:
            # –ï—Å–ª–∏ Content-Disposition –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ URL
            filename = os.path.basename(urlparse(url).path)
            if not filename:
                filename = 'file.bin'  # –ò—Å–ø–æ–ª—å–∑—É–µ–º 'file.bin', –µ—Å–ª–∏ –∏–º—è –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ

        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        total_size = int(response.headers.get('content-length', 0))

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        block_size = 12500000  # 12,5 –ú–ë, —á—Ç–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç 100 –ú–±–∏—Ç/—Å –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–∞–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å
        downloaded_size = 0
        start_time = time.time()

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å —Ä–∞–Ω–¥–æ–º–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏ –∏ —Å—Å—ã–ª–∫–æ–π
        markup = types.InlineKeyboardMarkup()
        button_text = f"{get_random_emoji()} –°–∫–∞—á–∏–≤–∞—é —Ñ–∞–π–ª {get_random_emoji()}"
        button = types.InlineKeyboardButton(button_text, url=url)
        markup.add(button)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
        bot.edit_message_text(chat_id=message.chat.id, message_id=status_message.message_id, text="–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:", reply_markup=markup)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        with open(filename, 'wb') as file:
            for data in response.iter_content(block_size):
                size = file.write(data)
                downloaded_size += size

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 0.5 —Å–µ–∫—É–Ω–¥—ã
                if time.time() - start_time > 0.5:
                    percentage = (downloaded_size / total_size) * 100 if total_size > 0 else 0
                    speed = downloaded_size / (time.time() - start_time)
                    estimated_time = (total_size - downloaded_size) / speed if speed > 0 else 0

                    status_text = f"–°–∫–∞—á–∞–Ω–æ: {downloaded_size / 1024 / 1024:.2f} –ú–ë"
                    if total_size > 0:
                        status_text += f" –∏–∑ {total_size / 1024 / 1024:.2f} –ú–ë\n"
                        status_text += f"–ü—Ä–æ–≥—Ä–µ—Å—Å: {percentage:.1f}%\n"
                    else:
                        status_text += "\n"
                    status_text += f"–°–∫–æ—Ä–æ—Å—Ç—å: {speed / 1024 / 1024:.2f} –ú–ë/—Å\n"
                    if estimated_time > 0:
                        status_text += f"–û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–∏–º–µ—Ä–Ω–æ: {estimated_time:.0f} —Å–µ–∫—É–Ω–¥"

                    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å –Ω–æ–≤—ã–º–∏ —ç–º–æ–¥–∑–∏
                    button_text = f"{get_random_emoji()} –°–∫–∞—á–∏–≤–∞—é —Ñ–∞–π–ª {get_random_emoji()}"
                    button = types.InlineKeyboardButton(button_text, url=url)
                    markup = types.InlineKeyboardMarkup()
                    markup.add(button)

                    bot.edit_message_text(chat_id=message.chat.id, message_id=status_message.message_id, text=status_text, reply_markup=markup)
                    start_time = time.time()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        with open(filename, 'rb') as file:
            bot.send_document(message.chat.id, file)

        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        os.remove(filename)

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        button_text = f"{get_random_emoji()} –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω {get_random_emoji()}"
        button = types.InlineKeyboardButton(button_text, callback_data="download_complete")
        markup = types.InlineKeyboardMarkup()
        markup.add(button)
        bot.edit_message_text(chat_id=message.chat.id, message_id=status_message.message_id, text="–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!", reply_markup=markup)

    except requests.exceptions.RequestException as e:
        bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: {str(e)}")
    except Exception as e:
        bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")

if __name__ == '__main__':
    bot.polling(none_stop=True)
